name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      id-token: write
      contents: read
      attestations: write

    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
            
    steps:
    - uses: actions/checkout@v4
    
    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        
    - name: Fetch Sources
      uses: actions/checkout@v2
      
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install Python Dependencies
      run: pip install meson ninja
      
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
        
    - name: Install Qt6 on Windows
      if: runner.os == 'Windows'
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.2'

    - name: Prepare Build
      run: meson setup build
      
    - name: Run Build
      run: meson compile -v -C build
      
    - name: Run Test Suite
      run: meson test -v -C build

    - uses: vimtor/action-zip@v1.2
      with:
        files: build/
        dest: build_${{ matrix.os }}-${{ matrix.cpp_compiler }}.zip

    - name: Attest
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/build_${{ matrix.os }}-${{ matrix.cpp_compiler }}.zip'
